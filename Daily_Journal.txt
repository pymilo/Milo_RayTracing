@Milo

####################################
December 13, 2017 
####################################

The simulation has a bugg we want to fix. It consists in showing linear spatial gaps on the ghost-ray pattern for far
off-axis sources (~20 or ~30 arcmin).

The plan is to look at the cross-section of the incident rays at especific locations along the optical path. e.g.
at the module pupil, at the first hit of every ray.

So far I have tested that cross-section at the front of the optics for an on-axis source. The work was saved in the python3
notebook: "/Source_Debuging_00.ipynb".

Small problem found: The inner blocker has the wrong dimension. An
issue was created in the FOXSI-Github repository and assigned to
myself to fix it once I get the real values from Patrick (Marshall).
Patrick already responded saying he will give me those number early
next week. Fro now we could take some numbers out of the CAD drawings.

####################################
December 14, 2017 
####################################

* Created a notebook called Source_Debuging_01.ipynb that contains
  tests that pass rays through the module and plot the cross-section.
  
####################################
December 15, 2017 
####################################

* I plotted the cross-section of the rays after their first
  bounce - Everything saved in Notebook: Source_Debuging_01.
  Here what I found:

  * For an on-axis at d=100m source, photons hit once in both the
    Paraboloid and the Hyperboloid segment.
  * For an on-axis at d=1AU source, photons hit once only on the
    most inner hyperboloid segment. This is expected since for this
    far away source, the rays come almost in a parallel configuration.
  * The reason I see hyperboloid hits only in the most inner mirror is
    because the rays are not yet killed by the back core blocker.
    I expect that once the rays are collected by the detector,
    i.e. pass through the back blocker, those singly reflected rays
    get killed.
  * From the simulation, paraboloid gost rays appear at smaller
    off-axis angles than those coming from the hyperboloid segment.
  * If theta is the polar angle, paraboloid ghost rays initially come
    from theta ~ 0 and 180 degress. Then the move down once the
    off-axis increases. This is true for an off-axis source located on
    the negative region of the Y-axis.
  * Some ghost rays coming from the hyperboloid segment start
    appearing for off-axis greater than ~15 arcmin.
  * Whit 10 thousand rays I sort of see some gaps on the singly
    reflected rays coming from the paraboloid. More rays are needed to
    convince myself that the gaps are indeed there.
  * I run one million photons at the end of the notebook. It took a
    while, so I figured I might be better to use the rays already
    saved in CSV files to make this kind of plots and that is exactly
    what I'll do next.

####################################
December 19, 2017 
####################################

  * Tryed to save the rays using the  foxsisim.util "save_rays"
    function, but after running 10e7 rays I did not have success
    saving the rays for a bug related with the history parameter of
    the rays. This cost me 4 hours of having the computer running with
    no succes. Save_rays shows some troubles when the rays are more
    than 40 off-axis for some reason. Further exploration is needed.

  * I expended most of my time debugging the HPD function of the
    Optics calibration.

####################################
December 20, 2017 
####################################

   * Hunting down the save_rays problem. I found that the problem was
     that the passthorugh rays (those that don't interact with the
     module) don't have a hist parameter with dimension greater than
     2, so the program was breaking. I easily solved the problem by
     sieving the rays and eliminating those that pass thorugh.
   * We have passthrough rays at this point because the back blocker
     hasn't been introduced. It is introduce with the function
     Detector.CatchRays.

####################################
December 21, 2017 
####################################

    * There is a big difference on the angular distribution observed
      for 30arcmin off-axis sources between Notebooks
      Source_Debuging_01 and Source_Debuging_02. The main difference
      is that the first is plotted using Rays that Pass Thorugh the
      module and no more. The second plots the rays that in addition
      to pass thorugh the module have been caught by the detector. I
      suspect the assimetry may be related with the way the detector
      catches rays.
     * To asses this difference I run rays at 30arcmin off-axis and
      saved them on '1millionRays/rays_on_module.csv'
    * These differences are compared on Notebook: Source_Debuging_03

####################################
December 22, 2017 
####################################

    * I plotted ~3 Million rays generated at 1AU 30arcmin off-axis
      that hit the module but have not been caught by the
      detector. The angular distribution looks pretty even to me.
    * In Notebook "Source_Debuging_03" I created a detector of 10x10
      cm and a resolution of 1024x1024 to catch rays. That procedure
      takes some time.
    * Plotting caught rays: The gaps are gone, and in addition, some
      extra ghost rays are observed from those parts that were not
      observed before. The only apparent difference between the way
      the simulation was run now with that that I ran a couple of
      weeks ago is that we fixed the size of the blocker.
    * Possible next step: Run the simulation with the exact
      pareameters I used a couple of weeks ago, i.e. blocker size by
      default, and reproduce the gaps. If by changing the blocker size
      we see change in the gaps size and apperance we could conclude
      that those blockers are a key piece for the FOXSI optics and
      Ghost Rays.
      
####################################
December 27, 2017 
####################################

    * I've been pretty much enjoying the hollydays, but today I start
      running the simulation with the default parameters (defaults
      blocker size) for an off-axis source located at the negative
      side of the Y-axis. Running for 1 Million rays.

####################################
December 28, 2017 
####################################

    * Reading the rays for default parameters.
    * There gaps appear when in Module.PassRays the Keyword "robust"
      is set to True. This keywork remove the best solution from
      surfaces.
    * Renaming the saved_rays to know what there is in each one.
    * Second Goal: Over plot the simulation with Lab data.
    * It may be better to overplot the simulation ran for an at 100m
      away source.
    * This is done in the Notebook ** NoGaps_Overplot_Sim-Data **.
    * I forgot, I have run the simulation for a 7-shell module. I need
      to edit the code, replace the module for a 10-shell optics and
      run the simulation againg. I need to be carefull, because the
      blocker size needs to be modified too.


####################################
December 29, 2017 
####################################

    * I ran the simulation for a 10-Shell module and an at 100m away
      source for 3 million rays - No gaps. I overploted the simulation
      with the data we took in Huntsville and the ghost ray pattern
      match much better than before. The plots are shown in Notebook:
      "NoGaps_Overplot_Sim-Data".

    * To highlight is the outer ring that has not been seen before and
      may correspond with the fact that the blocker was to big. If
      true, the blocker size is critical to reduce ghost rays for "great"
      off-axis angles.


####################################
January 16, 2018 
####################################

	After a really intense begining of semester I'm finally back
	at Berkeley to resume my work with the Ray-Tracing simulation
	and the other duties I have with FOXSI.

	Current status: All Notebooks and rays are generated for 10,
	14, 18, 22 and 30 arcmin off-axis sources located 100 meters
	away. Rays for 26 arcmin off-axis source are generated but the
	Notebook hasn't been generated. Let's start with that and
	completing the slides that summarize all this work.

	One of the next taks is to run the simulation for a 10-shell
	module using diferent sizes of blockers and measured the
	amount of Ghost-Rays for each case. Goal: Have a plot and
	results for the team meeting in two days.

	Using an on-axis sources would not tell us how much GR are
	coming as result of the inner blocker size. To test the effect
	of that size what I proposed is to use the maximum off-axis
	angle we would have during flight (i.e. 30 arcmin at 1AU) and run the
	simualtion playing with the size of the inner blocker.


####################################
January 17, 2018 
####################################

	* I left the simulation runing last night for four differente
          sizes of blocker diameter for a 10-shell
          module. Unfortunately, only one of the file recording the
          rays was saved. I fixed the script this morning and now is
          running again. This will take the whole day to run.

	* In the meantime, I will compare the Ghost Ray Pattern for a
          source at 100 meters and one at 1 astronomical unit. This is
          done in a notebook named "GR_30acrmin_100m_vs_1AU.ipynb".

	* Conclusion: No apparent big difference between 100m and 1AU
          for the GR pattern for a 30 arcmin off-axis source.

####################################
January 18, 2018 
####################################

	* Something that is really strange when comparing the sources
          at 100m and 1AU is that zooming in the dots from 100m
          overplot exactly on top of those from 1AU. It's like the
          program is reading the same file of rays. I need to check
          this today. The other goal for today is to plot the GR for
          the four different blocker sizes. Simulation was left runing
          last night and it's still running, but I hope it finishes by
          noon.

####################################
January 19, 2018 
####################################
	  
	* Yesterday I got an email from Patrick saying that the inner
          blocker diameter for a ten shell-module is 2.505
          inches. This seems too big since according to him, the
          front and back blockers have the same size. A further
          discussion is needed (and scheduled) with Lindsay and
          Brian. In the meantime I ran the simulation also for that
          diameter and today's first task is to consolidate a set of
          slides with the results. Thus, the radii simulated are:
          2.623cm, 2.805cm, 2.855cm, 2.988cm, 3.170cm, and
          3.230cm. *2.855cm is the one that corresponds to the
          measured diameter reported by Patrick.

	* I found what I thing is another bug in the FOXSISIM (fuck!).
	  What I think is happening now with the blockers in the
	  simulation is the blockers are created inside 'module.py'
	  lines 69 to 72. Then they are appended as surfaces in line
	  104 (function 'getSurfaces' line 93), but then after that
	  the front and back blocker are eliminated -> lines 105 and
	  106. The question now is WHY the simulation has been running
	  and giving different results (sort of consistent) for a
	  range of blocker sizes? My guess is that its because  the
	  way the rays are generated. They are isotropically generated
	  and then propagated to the front of the optics. Since the
	  the optics pupil is defined with the front blocker, there
	  are no rays generated that hit the front blocker. Thus my
	  guess is that the current simulation only simulated the
	  front blocker but not the rear one. An experiment that I
	  proposed to test how to include the front and rear blockers
	  is by simply commenting lines 105 and 106 of module.py that
	  already had a comment saying '# we'll test these
	  seperately'. This would also expline why the outer blue ring
	  in the GR pattern doesn't reduce its size when variying the
	  blocker diameters.

	* I changed my mind. It seems that lines 105 and 106 in
          module.py do not affect the effect of the blockers in the
          simulation. This is because those lines only define the
          variable "allSurface" that seems to be used only to
          "enumerate" all surfaces in the simulation for a moment and
          then count the Shells in line 153.

	* What I think now is that none of the rays hit the rear
          blocker and the reason is that the intersection is defined
          before a Ray can reach it. Probably lines from 139 to 151
          need to be moved to the end of the PassRays function inside
          module.py
	* Condition 139 NEVER is going to be satisficed since at that
          point none of the rays would have a Z location greater than
          60cm. In fact, the rays won't have a Z position greater than
          60cm before they get caught by the detector. Maybe I need to
          include the rear blocker once I do detector.CatchRays


####################################
February 1, 2018 
####################################

	* All last week Dan Ryan was visiting Berkeley and the ork
          with the simulation was salowed down a little bit. Early
          this week I was working on modifiying the foxsisim code,
          particularly "module.py" to include the rear blocker. After
          several debgging I finally got a working version of the
          simulation that includes the new features in the Github
          Branch located at pymilo/Random-Source-Debugging the version
          on February 1, 2018.

	* The blocker sizes are introduced now as a 2D tuple in the
          keyword "core_radius" when Module is called. the first
          component of the tuple is the front radius and the second is
          corresponds to the rear blocker.

	* Since the Front Blocker affects the vigneting of the the
         most inner figure of a FOXSI module, I started by testing the
         front blocker and its effect on blocking singly hyperboliid
         reflected rays and the vignetting of the double bounces. All
         this analyzis is recorded in the Notebook entitles:
         "Debuggin_Blocker_RearAndFront.ipynb".
	 
####################################
February 2, 2018 
####################################

	 * Since at the end, the Notebook called
           "Debuggin_Blocker_RearAndFront.ipynb" was the one I used to
           find the most efficient size for the Front blocker while
           not having any rear blocker, I decided to rename it as
           "Most_Efficient_Front_Blocker.ipynb" that is saved at the
           Notebooks folder.
	   
	 * The most effective size for the front Blocker is R =
           3.17cm. This analyzis was made considering only On-axis
           sources. 
	   
	 *  I created a new notebook to find the most efficient size
            for the rear blocker. "Most_Efficient_Rear_Blocker.ipynb"

	 * The Double bounce flux rapidely decrease when increasing
	   the rear blocker radius.

	 * The rear blocker may be crucial at bloking Ghost Rays for
	   off-axis sources. We need to assess what the best compromise
	   for these two effects is.

	 * NEXT Step: Assess the effect of the front blocker size for
           off-axis sources, create a plot similar to the one Ron
           did. For this part I should not include the rear blocker.


####################################
February 4, 2018 
####################################

	*  The plot saved in Most_Efficient_Rear_Blocker.ipynb for the
           vignetting against the rear blocker radious looks really
           weird. We don't spect to see a drop that pronounced for
           very small radious. I need to investigate this behaviour
           and what can be wrong about that. My first idea is to plot
           the cross-section of the module at different depths inside
           the module. Particularly, at the Z corresponding to the
           location of the rear blocker.




